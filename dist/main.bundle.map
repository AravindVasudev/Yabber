{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.html","webpack:///ws (ignored)"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;ACN0E;AAC5B;AACU;AACZ;AAE5C,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACTX;AACH;AACM;AAC5B;AAOhB;IAKE;QAJA,UAAK,GAAG,YAAY,CAAC;QACrB,WAAM,GAAG,IAAI,CAAC;QACd,YAAO,GAAG,EAAE,CAAC;QAGX,IAAI,CAAC,MAAM,GAAG,yDAAU,CAAC,uBAAuB,CAAC,CAAC;QAClD,IAAI,QAAQ,GAAG,2DAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAC5D,QAAQ,CAAC,SAAS,CAAC,UAAC,OAAO;YACzB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,SAAS,IAAI,SAAO,OAAO,UAAO,CAAC;QACzE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2BAAI,GAAJ,UAAK,GAAG;QACN,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAtBH;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,kCAAmC;YACnC,kCAAmC;SACpC,CAAC;;oBAAA;IAmBF,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AC5BwD;AACjB;AACI;AACF;AAEI;AAc9C;IAAA;IAAyB,CAAC;IAZ1B;QAAC,sFAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;gBACX,iEAAU;aACX;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;;iBAAA;IACuB,gBAAC;AAAD,CAAC;;;;;;;;;ACnB1B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,+EAA+E;AAExE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF,qBAAqB,cAAc,eAAe,2BAA2B,gCAAgC,EAAE,UAAU,qBAAqB,iBAAiB,oBAAoB,cAAc,gBAAgB,EAAE,gBAAgB,cAAc,kBAAkB,eAAe,sBAAsB,EAAE,iBAAiB,cAAc,wBAAwB,iBAAiB,kBAAkB,EAAE,eAAe,0BAA0B,cAAc,eAAe,EAAE,kBAAkB,sBAAsB,EAAE,iCAAiC,qBAAqB,EAAE,G;;;;;;;ACAhjB,0N;;;;;;;ACAA,e","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 422;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 422\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/Rx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app works!';\n  socket = null;\n  chatinp = '';\n\n  constructor() {\n    this.socket = io.connect('http://localhost:3000');\n    let listener = Observable.fromEvent(this.socket, 'message');\n    listener.subscribe((payload) => {\n      console.log(payload);\n      document.getElementById('messages').innerHTML += `<li>${payload}</li>`;\n    });\n  }\n\n  send(msg) {\n    this.socket.emit('message', msg);\n    this.chatinp = '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"* {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n  font: 13px Helvetica, Arial; }\\n\\nform {\\n  background: #000;\\n  padding: 3px;\\n  position: fixed;\\n  bottom: 0;\\n  width: 100%; }\\n\\nform input {\\n  border: 0;\\n  padding: 10px;\\n  width: 90%;\\n  margin-right: .5%; }\\n\\nform button {\\n  width: 9%;\\n  background: #82e0ff;\\n  border: none;\\n  padding: 10px; }\\n\\n#messages {\\n  list-style-type: none;\\n  margin: 0;\\n  padding: 0; }\\n\\n#messages li {\\n  padding: 5px 10px; }\\n\\n#messages li:nth-child(odd) {\\n  background: #eee; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = 703\n// module chunks = 1","module.exports = \"<ul id=\\\"messages\\\"></ul>\\n<form action=\\\"\\\">\\n  <input id=\\\"m\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"m\\\" [(ngModel)]=\\\"chatinp\\\" />\\n  <button (click)=\\\"send(chatinp)\\\">Send</button>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 704\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 986\n// module chunks = 1"],"sourceRoot":""}